-- DROP TABLE PAYMENT IF EXISTS;
-- DROP TABLE INVOICE IF EXISTS;
-- DROP TABLE CURRENCY IF EXISTS;

CREATE TABLE IF NOT EXISTS CURRENCY (
	CURRENCY_CD VARCHAR(3) NOT NULL,
	CURRENCY_NAME VARCHAR(20) NOT NULL,
	IS_DIGITAL BIT,
	PRIMARY KEY(CURRENCY_CD)
);

-- INSERT INTO CURRENCY(CURRENCY_CD, CURRENCY_NAME, IS_DIGITAL) VALUES('BTC', 'Bitcoin', 1);
MERGE INTO CURRENCY KEY(CURRENCY_CD) VALUES('BTC', 'Bitcoin', 1);


CREATE TABLE IF NOT EXISTS INVOICE (
	INVOICE_ID INT IDENTITY,
	INVOICE_DATE TIMESTAMP DEFAULT LOCALTIMESTAMP(),
	EXPIRY_DATE TIMESTAMP,
	AMOUNT DECIMAL(20,8),
	CURRENCY_CD VARCHAR(3),
	PAY_ADDRESS VARCHAR(64),
	AMOUNT_OWED DECIMAL(20,8),
	OWED_CURRENCY_CD VARCHAR(3),
	STATE VARCHAR(15),
	FOREIGN KEY(CURRENCY_CD) REFERENCES CURRENCY(CURRENCY_CD)
);

-- INSERT INTO INVOICE(EXPIRY_DATE, AMOUNT, CURRENCY_CD, PAY_ADDRESS, STATE) VALUES(DATEADD(DAY, 10, LOCALTIMESTAMP()), 50, 'BTC', 'def234GhI', 'DUE');

CREATE TABLE IF NOT EXISTS PAYMENT (
	INVOICE_ID INT NOT NULL,
	PAYMENT_ID INT AUTO_INCREMENT NOT NULL,
	PAYMENT_DATE TIMESTAMP,
	AMOUNT DECIMAL(20,8),
	CURRENCY_CD VARCHAR(3),
	TRANSACTION_ID VARCHAR(128),
	STATE VARCHAR(10),
	PRIMARY KEY(INVOICE_ID, PAYMENT_ID),
	FOREIGN KEY(INVOICE_ID) REFERENCES INVOICE(INVOICE_ID),
	FOREIGN KEY(CURRENCY_CD) REFERENCES CURRENCY(CURRENCY_CD)
);
